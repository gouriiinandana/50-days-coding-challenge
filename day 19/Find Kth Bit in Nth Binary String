Q. Given two positive integers n and k, the binary string Sn is formed as follows:

S1  = "0"
Si = Si - 1 + "1" + reverse(invert(Si - 1)) for i > 1
Where + denotes the concatenation operation, reverse(x) returns the reversed string x, and invert(x) inverts all the bits in x (0 changes to 1 and 1 changes to 0).

For example, the first four strings in the above sequence are:

S1 = "0"
S2 = "011"
S3 = "0111001"
S4 = "011100110110001"
Return the kth bit in Sn. It is guaranteed that k is valid for the given n.Given two positive integers n and k, the binary string Sn is formed as follows:


  #CODE:

class Solution {
public:
    char findKthBit(int n, int k) {
        if (k==1) return '0';// base case
        int sz=32-__builtin_clz(k);
        int k0=(1<<sz)-k; // reflected number
        if (k0==k) return '1';// k is a symmetry number
    //    cout<<(1<<sz)<<", k="<<k<<endl;
        return (findKthBit(n, k0)=='0')?'1':'0';
    }
};
